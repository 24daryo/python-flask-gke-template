name: Build and Deploy to GKE

on:
  push:
    branches: #以下の名前のブランチがプッシュされたら起動
      - development

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GCP_PROJECT_NUMBER: ${{ secrets.GCP_PROJECT_NUMBER }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}
  DEPLOYMENT_NAME: gke-test-rn
  IMAGE: hello-app-rn
  REGISTRY_HOSTNAME: asia.gcr.io

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: development

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # - id: image-url
      #   name: Create docker image url
      #   run: |
      #     echo "::set-output name=value::${{ env.REGISTRY_HOSTNAME }}/${{ secrets.GKE_PROJECT  }}/my-service:latest"

      # - name: loud SDK
      #   uses: google-github-actions/setup-gcloud@v0
      #   with:
      #     project_id: ${{ secrets.GKE_PROJECT }}

      # - id: auth
      #   name: "Authenticate to Google Cloud"
      #   uses: google-github-actions/auth@v0.8.0
      #   with:
      #     create_credentials_file: "true"
      #     workload_identity_provider: "projects/${{ env.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider"
      #     service_account: "mec-kaunsell-gke@aihubble.iam.gserviceaccount.com"
      #     access_token_lifetime: 1200s

      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v0"
        with:
          token_format: "access_token"
          workload_identity_provider: "projects/${{ env.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider"
          service_account: "mec-kaunsell-gke@aihubble.iam.gserviceaccount.com"

      - name: Docker configuration
        run: |-
          echo ${{steps.auth.outputs.access_token}} | docker login -u oauth2accesstoken --password-stdin https://$GAR_LOCATION-docker.pkg.dev
      # Get the GKE credentials so we can deploy to the cluster
      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v0
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      # - name: gcloud auth login by workload identity
      #   run: |-
      #     gcloud auth login --brief --cred-file="${{ steps.auth.outputs.credentials_file_path }}"

      # - name: Configure docker to use the gcloud cli
      #   run: gcloud auth configure-docker --quiet

      # Docker イメージをビルドする(.の箇所にはDockerfileのフォルダパスを指定する)
      - name: Build
        run: |-
          docker build \
            --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .

      # Docker イメージを Google Container Registry にプッシュする
      - name: Publish
        run: |-
          docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

      # kustomize を設定する
      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

      # Docker イメージを GKE クラスタにデプロイする
      - name: Deploy
        run: |-
          cd hello-app/manifests
          ../../kustomize edit set image gcr.io/$PROJECT_ID/$IMAGE:v1=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
          ../../kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide
